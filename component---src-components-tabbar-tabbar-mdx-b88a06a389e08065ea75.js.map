{"version":3,"sources":["webpack:///../src/components/tabbar/tabbar.mdx"],"names":["slots","name","desc","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","filename","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Alert","title","text","parentName","Table","columnsResizable","dataSource","columns","dataIndex","isMDXComponent"],"mappings":"2UAOaA,EAAQ,CAAC,CACpBC,KAAM,GACNC,KAAM,iCACL,IAAAF,UAAAG,OAAAH,IAAAG,OAAAC,aAAAJ,KAAAG,OAAAE,UAAAC,eAAAC,KAAAP,EAAA,eAAAG,OAAAK,eAAAR,EAAA,cAAAS,cAAA,EAAAC,MAAA,CAAAT,KAAA,QAAAU,SAAA,sCACI,MAAMC,EAAe,QAAG,IAAAA,UAAAT,OAAAS,IAAAT,OAAAC,aAAAQ,KAAAT,OAAAE,UAAAC,eAAAC,KAAAK,EAAA,eAAAT,OAAAK,eAAAI,EAAA,cAAAH,cAAA,EAAAC,MAAA,CAAAT,KAAA,eAAAU,SAAA,sCAC/B,MAAME,EAAc,CAClBb,QACAY,gBAEIE,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,UAAQ,UAEhBA,YAAA,qDACAA,YAACG,QAAK,CAACC,MAAM,QAAQC,KAAK,wCAAwCH,QAAQ,UAC1EF,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,WAAKA,YAAA,QAAMM,WAAW,MAClB,UAAa,uBAAqB,weActCN,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,WAAKA,YAAA,QAAMM,WAAW,MAClB,UAAa,uBAAqB,yfActCN,YAAA,MACE,GAAM,QAAM,QAGdA,YAACO,QAAK,CAACC,kBAAgB,EAACC,WAAY/B,EAAOgC,QAAS,CAAC,CACnDC,UAAW,OACXP,MAAO,QACN,CACDO,UAAW,OACXP,MAAO,OACLF,QAAQ,UA2BZF,YAAA,MACE,GAAM,cAAY,oBAIvB,IAAAN,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAT,KAAA,aAAAU,SAAA,sCAEDK,EAAWkB,gBAAiB","file":"component---src-components-tabbar-tabbar-mdx-b88a06a389e08065ea75.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adui-mob/adui-mob/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Alert, Table } from 'adui';\nexport const slots = [{\n  name: '',\n  desc: '默认 slot，用于承载 TabbarItem'\n}];\nexport const _frontmatter = {};\nconst layoutProps = {\n  slots,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tabbar\"\n    }}>{`Tabbar`}</h1>\n    <p>{`用于自定义页面的头部，一般情况下建议使用原生的头部，当需要自定义头部的时候才使用`}</p>\n    <Alert title=\"组件间关系\" text=\"TabbarItem 组件的祖先组件，需要搭配 TabbarItem 使用\" mdxType=\"Alert\" />\n    <h3 {...{\n      \"id\": \"常用示例\"\n    }}>{`常用示例`}</h3>\n    <h4 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-tabbar class=\"item\" defaultValue=\"{{0}}\">\n  <ad-tabbar-item value=\"{{0}}\">\n    <image class=\"icon\" slot=\"icon\" src=\"../images/home.svg\" />\n    <image class=\"icon\" slot=\"icon-active\" src=\"../images/home_selected.svg\" />\n    首页\n  </ad-tabbar-item>\n  <ad-tabbar-item value=\"{{1}}\">\n    <image class=\"icon\" slot=\"icon\" src=\"../images/manage.svg\" />\n    <image class=\"icon\" slot=\"icon-active\" src=\"../images/manage_selected.svg\" />\n    管理\n  </ad-tabbar-item>\n</ad-tabbar>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"组合徽标\"\n    }}>{`组合徽标`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-tabbar class=\"item\" defaultValue=\"{{0}}\">\n  <ad-tabbar-item value=\"{{0}}\">\n    <image class=\"icon\" slot=\"icon\" src=\"../images/home.svg\" />\n    <image class=\"icon\" slot=\"icon-active\" src=\"../images/home_selected.svg\" />\n    首页\n  </ad-tabbar-item>\n  <ad-tabbar-item value=\"{{2}}\" badgeContent=\"\">\n    <image class=\"icon\" slot=\"icon\" src=\"../images/message.svg\" />\n    <image class=\"icon\" slot=\"icon-active\" src=\"../images/message_selected.svg\"/>\n    消息\n  </ad-tabbar-item>\n</ad-tabbar>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"slot\"\n    }}>{`Slot`}</h2>\n\n    <Table columnsResizable dataSource={slots} columns={[{\n      dataIndex: 'name',\n      title: 'name'\n    }, {\n      dataIndex: 'desc',\n      title: '描述'\n    }]} mdxType=\"Table\" />\n    {/* ## Events\n     export const events = [\n      {\n        name: 'onChange',\n        desc: '选中选项时触发',\n        value: '{value: any}',\n      },\n     ]\n     <Table\n      columnsResizable\n      dataSource={events}\n      columns={[\n        {\n          dataIndex: 'name',\n          title: 'name',\n        },\n        {\n          dataIndex: 'desc',\n          title: '描述',\n        },\n        {\n          dataIndex: 'value',\n          title: '返回值',\n        },\n      ]}\n     /> */}\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}