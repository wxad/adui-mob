{"version":3,"sources":["webpack:///../README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","width","isMDXComponent"],"mappings":"sRAQaA,EAAe,Q,2LAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,YADR,YAGA,4EACA,8BAAa,iBAAGC,WAAW,IACvB,KAAQ,iCADC,kCAGb,kBACE,GAAM,QADR,QAGA,uBACF,mBAAKC,IAAI,oEAAoEC,MAAM,SAEjF,uBACA,kBACE,GAAM,QADR,QAGA,uBAAK,oBAAMF,WAAW,MAClB,UAAa,iBADZ,iCAML,iGACA,uBACA,kBACE,GAAM,MADR,MAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,iBADZ,2BAIL,4FAA2E,iBAAGA,WAAW,IACrF,KAAQ,sEAD+D,OAG3E,uBACA,kBACE,GAAM,eADR,eAGA,0HACA,uBACA,kBACE,GAAM,QADR,QAGA,qCAAoB,0BAAYA,WAAW,KAAvB,cAApB,wDACA,uBAAK,oBAAMA,WAAW,OAAjB,kFAIL,kBACE,GAAM,QADR,QAGA,qEACA,sBACE,kBAAIA,WAAW,MAAf,2EAAgG,sBAAQA,WAAW,MAAnB,UAAhG,WAAuJ,sBAAQA,WAAW,MAAnB,UAAvJ,6BACA,kBAAIA,WAAW,MAAK,iBAAGA,WAAW,KAC9B,KAAQ,sDADQ,wBAApB,8BAGA,kBAAIA,WAAW,MAAK,iBAAGA,WAAW,KAC9B,KAAQ,6DADQ,uBAApB,sBAIF,kBACE,GAAM,aADR,aAGA,qBAAG,sBAAQA,WAAW,KAAnB,YAAH,gBAAgE,sBAAQA,WAAW,KAAnB,QAAhE,IAA6G,sBAAQA,WAAW,KAAnB,QAA7G,mBAAyK,0BAAYA,WAAW,KAAvB,gBAAzK,IAAsO,0BAAYA,WAAW,KAAvB,SAAtO,gBACF,0BAAYA,WAAW,KAAvB,gBADE,4BACmF,0BAAYA,WAAW,KAAvB,SADnF,sBAEA,kEAAiD,0BAAYA,WAAW,KAAvB,+CAAjD,qEAA8M,0BAAYA,WAAW,KAAvB,8CAA9M,KACA,kBACE,GAAM,YADR,YAGA,qGAAoF,0BAAYA,WAAW,KAAvB,YAApF,sBACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,01BA8BL,kBACE,GAAM,QADR,QAGA,kIAEA,oG,yLAMJJ,EAAWO,gBAAiB","file":"component---readme-md-8a4c00963c7336b322db.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adui-mob/adui-mob/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"adui-mob\"\n    }}>{`adui-mob`}</h2>\n    <p>{`这个项目是 adui 小程序版本的组件库，沿用与 adui 同一套设计语言，目前只支持小程序原生开发。`}</p>\n    <p>{`开发者文档：`}<a parentName=\"p\" {...{\n        \"href\": \"https://wxad.design/adui-mob/\"\n      }}>{`https://wxad.design/adui-mob/`}</a></p>\n    <h2 {...{\n      \"id\": \"扫码体验\"\n    }}>{`扫码体验`}</h2>\n    <div>\n  <img src=\"https://wxa.wxs.qq.com/images/paki/adui-for-mobile/adui-mob-1.jpg\" width=\"200\" />\n    </div>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"本地开发\"\n    }}>{`本地开发`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install\n\nnpm run dev\n`}</code></pre>\n    <p>{`整个项目使用 gulp 编译，编译完后将 dist 目录导入开发者开发者工具中，即可看到 demo。rpx 版本的导入 dist-rpx 目录。`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"使用\"\n    }}>{`使用`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install adui-mob\n`}</code></pre>\n    <p>{`adui-mob 目前已经发布到 npm 上了，可以直接使用 npm 包的方式，具体在小程序中如何使用 npm 包，可以参考小程序官方的`}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.weixin.qq.com/miniprogram/dev/devtools/npm.html\"\n      }}>{`教程`}</a></p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"px-与-rpx-尺寸\"\n    }}>{`px 与 rpx 尺寸`}</h2>\n    <p>{`组件目前支持 px 和 rpx 两种单位，npm 包里面会包含两个文件夹，一个是 components 和 components-rpx，分别对应 px 和 rpx 单位，可根据项目需要进行引用`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"样式重置\"\n    }}>{`样式重置`}</h2>\n    <p>{`组件的元素盒模型都是用的 `}<inlineCode parentName=\"p\">{`border-box`}</inlineCode>{`，之前的做法是在组件里面引入重置代码，目前这部分代码已经移除，建议在项目中的 app.wxss 进行重置`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`page,view, button, scroll-view, input, text {\n  box-sizing: border-box;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"配套工具\"\n    }}>{`配套工具`}</h2>\n    <p>{`除了组件外，我们还开发了配套的 vscode 插件和用于编译的 gulp 插件，具体如下`}</p>\n    <ul>\n      <li parentName=\"ul\">{`ad-mob，vscode 插件，这个插件提供了 vscode 中开发时组件的标签补全，props 的提示和补全功能，整个插件的功能实现是参考 `}<strong parentName=\"li\">{`minapp`}</strong>{` 插件的，建议和`}<strong parentName=\"li\">{`minapp`}</strong>{`配套使用，因为其提供了代码高亮和基础组件补全的功能`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/package/gulp-ad-icon-shaking\"\n        }}>{`gulp-ad-icon-shaking`}</a>{`，这个插件提供了 icon 的 shaking 功能`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/package/gulp-adui-component-shaking\"\n        }}>{`gulp-adui-component`}</a>{`，这个插件提供了组价按需打包的功能`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"内部控制和外部控制\"\n    }}>{`内部控制和外部控制`}</h2>\n    <p><strong parentName=\"p\">{`adui-mob`}</strong>{`中包含状态的组件基本上都有`}<strong parentName=\"p\">{`内部控制`}</strong>{`和`}<strong parentName=\"p\">{`外部控制`}</strong>{`两种设计，可以根据组件是否同时有`}<inlineCode parentName=\"p\">{`defaultValue`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`这两个Prop来区分。\n`}<inlineCode parentName=\"p\">{`defaultValue`}</inlineCode>{`只在第一次渲染时生效，之后的状态由组件自身控制，而`}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`只能通过外部的设置来改变组价的状态。`}</p>\n    <p>{`这样设计的好处是如果你只是需要设置一个初始值，并且只想要关心这个值的改变情况，比如 `}<inlineCode parentName=\"p\">{`<ad-switch defaultChecked onChange={xxx} />`}</inlineCode>{`，这样你就不需要单独地设置一个 data 保证组件 UI 状态的完整； 如果你想要存储这个值，那么你需要在变化时将这个值回传给组件：`}<inlineCode parentName=\"p\">{`<ad-switch checked={xxx} onChange={xxx} />`}</inlineCode>{`。`}</p>\n    <h2 {...{\n      \"id\": \"主题色和内置变量\"\n    }}>{`主题色和内置变量`}</h2>\n    <p>{`adui-mob 和 adui 沿用同一套色系和主题色，同样使用的是 css 变量的方式来实现的，因此，如果你想改变整个组件库的主题色和灰色色系，可以在 `}<inlineCode parentName=\"p\">{`app.wxss`}</inlineCode>{` 文件中使用变量进行覆盖，具体如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`page {\n  --primary-color: #07c160;\n  --ad-green: #07c160;\n  --ad-blue: #2b7bd6;\n  --ad-orange: #EDA20C;\n  --ad-red: #d9514c;\n  --gray-50: #fafafa;\n  --gray-100: #f2f2f2;\n  --gray-200: #ebebeb;\n  --gray-300: #e6e6e6;\n  --gray-400: #e0e0e0;\n  --gray-500: #d6d6d6;\n  --gray-600: #c7c7c7;\n  --gray-700: #a3a3a3;\n  --gray-800: #6b6b6b;\n  --gray-900: #1f1f1f;\n  --transparent-gray-50: rgba(0, 0, 0, 0.02);\n  --transparent-gray-100: rgba(0, 0, 0, 0.06);\n  --transparent-gray-200: rgba(0, 0, 0, 0.08);\n  --transparent-gray-300: rgba(0, 0, 0, 0.1);\n  --transparent-gray-400: rgba(0, 0, 0, 0.12);\n  --transparent-gray-500: rgba(0, 0, 0, 0.16);\n  --transparent-gray-600: rgba(0, 0, 0, 0.22);\n  --transparent-gray-700: rgba(0, 0, 0, 0.36);\n  --transparent-gray-800: rgba(0, 0, 0, 0.58);\n  --transparent-gray-900: rgba(0, 0, 0, 0.88);\n  }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"注意事项\"\n    }}>{`注意事项`}</h2>\n    <p>{`由于这个组件库是跟着业务一步步迭代出来的，所以在早期的时候部分组件是用开发者直接创建的，后期建设的时候发现这部分组件的名字不符合整个组件库\n的规范，所以新增的组件来替代他们，这部分组件会保留，但是不会再更新。`}</p>\n    <p>{`以下组件将会停止更新，请使用其他组件替代：\ndropdown(可用 select 替换)、halfscreen(可用 sheet 替换)`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}