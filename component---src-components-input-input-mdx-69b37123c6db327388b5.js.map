{"version":3,"sources":["webpack:///../src/components/input/input.mdx"],"names":["slots","name","desc","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","filename","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","Table","columnsResizable","dataSource","columns","dataIndex","title","isMDXComponent"],"mappings":"2UAOaA,EAAQ,CAAC,CACpBC,KAAM,eACNC,KAAM,2BACL,IAAAF,UAAAG,OAAAH,IAAAG,OAAAC,aAAAJ,KAAAG,OAAAE,UAAAC,eAAAC,KAAAP,EAAA,eAAAG,OAAAK,eAAAR,EAAA,cAAAS,cAAA,EAAAC,MAAA,CAAAT,KAAA,QAAAU,SAAA,oCACI,MAAMC,EAAe,QAAG,IAAAA,UAAAT,OAAAS,IAAAT,OAAAC,aAAAQ,KAAAT,OAAAE,UAAAC,eAAAC,KAAAK,EAAA,eAAAT,OAAAK,eAAAI,EAAA,cAAAH,cAAA,EAAAC,MAAA,CAAAT,KAAA,eAAAU,SAAA,oCAC/B,MAAME,EAAc,CAClBb,QACAY,gBAEIE,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,SAAO,SAEfA,YAAA,yBACAA,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,qDACAA,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,uBAAqB,yPAUtCH,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,iEACAA,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,uBAAqB,ocAwBtCH,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,qCACAA,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,uBAAqB,yYAqBtCH,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,uBAAqB,2yBAsCtCH,YAAA,MACE,GAAM,QAAM,QAGdA,YAACI,QAAK,CAACC,kBAAgB,EAACC,WAAY5B,EAAO6B,QAAS,CAAC,CACnDC,UAAW,OACXC,MAAO,QACN,CACDD,UAAW,OACXC,MAAO,OACLP,QAAQ,UAgDZF,YAAA,MACE,GAAM,cAAY,oBAIvB,IAAAN,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAT,KAAA,aAAAU,SAAA,oCAEDK,EAAWgB,gBAAiB","file":"component---src-components-input-input-mdx-69b37123c6db327388b5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adui-mob/adui-mob/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Alert, Table } from 'adui';\nexport const slots = [{\n  name: 'rightElement',\n  desc: '右边 slot，用于自定义右边内容'\n}];\nexport const _frontmatter = {};\nconst layoutProps = {\n  slots,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <p>{`通过键盘输入内容的控件。`}</p>\n    <h3 {...{\n      \"id\": \"常用示例\"\n    }}>{`常用示例`}</h3>\n    <h4 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h4>\n    <p>{`input 常见的应用场景是在 cell 中使用，一般都是和 cell 组合使用`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-cell-group>\n  <ad-cell title=\"标题\">\n    <ad-input align=\"left\" slot=\"rightElement\" placeholder=\"输入内容左对齐\" />\n  </ad-cell>\n  <ad-cell title=\"标题\">\n    <ad-input slot=\"rightElement\" placeholder=\"输入内容右对齐\" />\n  </ad-cell>\n</ad-cell-group>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"格式输入\"\n    }}>{`格式输入`}</h4>\n    <p>{`input 除了支持原生的格式外，还另外支持手机号和千分号两种格式输入，通过 format 属性进行配置`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-cell-group>\n  <ad-cell title=\"手机号\">\n    <ad-input\n      type=\"number\"\n      format=\"phone\"\n      align=\"left\"\n      slot=\"rightElement\"\n      placeholder=\"请输入手机号\"\n      value=\"152 1234 1234\"\n    />\n  </ad-cell>\n  <ad-cell title=\"数字\">\n    <ad-input\n      type=\"number\"\n      format=\"number\"\n      align=\"left\"\n      slot=\"rightElement\"\n      placeholder=\"支持千分符\"\n      value=\"{{1234}}\"\n    />\n  </ad-cell>\n</ad-cell-group>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"错误提示\"\n    }}>{`错误提示`}</h4>\n    <p>{`input 可以通过外部控制的方式来展示错误样式`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-cell-group>\n  <ad-cell title=\"标题\">\n    <ad-input\n      align=\"left\"\n      error\n      placeholder=\"在此输入内容\"\n      slot=\"rightElement\"\n    />\n  </ad-cell>\n  <ad-cell title=\"标题\" innerStyle=\"align-items: flex-start;\">\n    <ad-input\n      align=\"left\"\n      error\n      errorText=\"输入内容错误\"\n      slot=\"rightElement\"\n      value=\"123\"\n    />\n  </ad-cell>\n</ad-cell-group>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"组合使用\"\n    }}>{`组合使用`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-cell-group noTopBorder noBottomBorder>\n  <ad-cell title=\"标题\" leftIcon=\"credit-card-outlined\">\n    <ad-input\n      align=\"left\"\n      slot=\"rightElement\"\n      placeholder=\"在此输入内容\"\n      icon=\"view-outlined\"\n    />\n  </ad-cell>\n  <ad-cell title=\"显示图标\">\n    <ad-input\n      align=\"left\"\n      slot=\"rightElement\"\n      placeholder=\"在此输入内容\"\n      icon=\"view-outlined\"\n    />\n  </ad-cell>\n  <ad-cell title=\"显示计数器\">\n    <ad-input\n      align=\"left\"\n      slot=\"rightElement\"\n      placeholder=\"在此输入内容\"\n      value=\"{{inputValue}}\"\n      bind:onChange=\"changeInput\"\n      counter=\"{{20}}\"\n    />\n  </ad-cell>\n  <ad-cell title=\"显示单位\">\n    <ad-input\n      align=\"left\"\n      slot=\"rightElement\"\n      placeholder=\"在此输入内容\"\n      unit=\"元\"\n    />\n  </ad-cell>\n</ad-cell-group>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"slot\"\n    }}>{`Slot`}</h2>\n\n    <Table columnsResizable dataSource={slots} columns={[{\n      dataIndex: 'name',\n      title: 'name'\n    }, {\n      dataIndex: 'desc',\n      title: '描述'\n    }]} mdxType=\"Table\" />\n    {/* ## Events\n     export const events = [\n      {\n        name: 'onChange',\n        desc: '输入值变化时触发',\n        value: '{value: number | string, cursor, keyCode}',\n      },\n      {\n        name: 'onFocus',\n        desc: 'focus 时触发',\n        value: '{...event}',\n      },\n      {\n        name: 'onBlur',\n        desc: 'blur 时触发',\n        value: '{...event}',\n      },\n      {\n        name: 'onConfirm',\n        desc: '点击确认键时触发',\n        value: '{...event}',\n      },\n      {\n        name: 'onKeyboardHeightChange',\n        desc: '键盘高度改变时触发',\n        value: '{...event}',\n      },\n     ]\n     这里 {... event} 是对小程序原生事件的解构，不同的事件值的内容不同\n     <Table\n      columnsResizable\n      dataSource={events}\n      columns={[\n        {\n          dataIndex: 'name',\n          title: 'name',\n        },\n        {\n          dataIndex: 'desc',\n          title: '描述',\n        },\n        {\n          dataIndex: 'value',\n          title: '返回值',\n        },\n      ]}\n     /> */}\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}