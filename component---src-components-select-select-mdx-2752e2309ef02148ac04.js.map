{"version":3,"sources":["webpack:///../src/components/select/select.mdx"],"names":["slots","name","desc","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","filename","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Alert","text","title","parentName","Table","columnsResizable","dataSource","columns","dataIndex","isMDXComponent"],"mappings":"2UAOaA,EAAQ,CAAC,CACpBC,KAAM,GACNC,KAAM,2BACL,CACDD,KAAM,SACNC,KAAM,kBACL,IAAAF,UAAAG,OAAAH,IAAAG,OAAAC,aAAAJ,KAAAG,OAAAE,UAAAC,eAAAC,KAAAP,EAAA,eAAAG,OAAAK,eAAAR,EAAA,cAAAS,cAAA,EAAAC,MAAA,CAAAT,KAAA,QAAAU,SAAA,sCACI,MAAMC,EAAe,QAAG,IAAAA,UAAAT,OAAAS,IAAAT,OAAAC,aAAAQ,KAAAT,OAAAE,UAAAC,eAAAC,KAAAK,EAAA,eAAAT,OAAAK,eAAAI,EAAA,cAAAH,cAAA,EAAAC,MAAA,CAAAT,KAAA,eAAAU,SAAA,sCAC/B,MAAME,EAAc,CAClBb,QACAY,gBAEIE,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,UAAQ,UAEhBA,YAAA,oCACAA,YAACG,QAAK,CAACC,KAAK,0DAA0DC,MAAM,QAAQH,QAAQ,UAC5FF,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,MACE,GAAM,QAAM,QAEdA,YAAA,WAAKA,YAAA,QAAMM,WAAW,MAClB,UAAa,uBAAqB,6bAgCtCN,YAACG,QAAK,CAACC,KAAK,qIAAqIC,MAAM,OAAOH,QAAQ,UACtKF,YAAA,MACE,GAAM,MAAI,MAEZA,YAAA,WAAKA,YAAA,QAAMM,WAAW,MAClB,UAAa,uBAAqB,4NAWtCN,YAAA,MACE,GAAM,QAAM,QAGdA,YAACO,QAAK,CAACC,kBAAgB,EAACC,WAAY/B,EAAOgC,QAAS,CAAC,CACnDC,UAAW,OACXN,MAAO,QACN,CACDM,UAAW,OACXN,MAAO,OACLH,QAAQ,UAgCZF,YAAA,MACE,GAAM,cAAY,oBAIvB,IAAAN,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAT,KAAA,aAAAU,SAAA,sCAEDK,EAAWkB,gBAAiB","file":"component---src-components-select-select-mdx-2752e2309ef02148ac04.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adui-mob/adui-mob/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Table, Alert } from 'adui';\nexport const slots = [{\n  name: '',\n  desc: '默认 slot，用于承载 selectItem'\n}, {\n  name: 'header',\n  desc: '自定义头部时使用'\n}];\nexport const _frontmatter = {};\nconst layoutProps = {\n  slots,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <p>{`用于承载较多当选择项内容，可展开与收起的组件。`}</p>\n    <Alert text=\"selectItem 的祖先组件，用于承载 selectItem 的内容，需与 selectItem 一起使用\" title=\"组件间关系\" mdxType=\"Alert\" />\n    <h3 {...{\n      \"id\": \"常用示例\"\n    }}>{`常用示例`}</h3>\n    <h4 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const options1 = [\n  {\n    title: '选项一',\n    value: 0,\n  },\n  {\n    title: '选项二',\n    value: 1,\n  },\n  {\n    title: '选项三',\n    value: 2,\n  },\n  {\n    title: '选项四',\n    value: 3,\n  },\n]\n<ad-select>\n  <ad-select-item\n    key=\"{{0}}\"\n    options=\"{{options1}}\"\n    defaultValue=\"{{value1}}\"\n  />\n  <ad-select-item\n    key=\"{{1}}\"\n    options=\"{{options1}}\"\n    defaultValue=\"{{value2}}\"\n  />\n</ad-select>\n`}</code></pre>\n    <Alert text=\"当与 select 一起使用时，每个 selectItem 必须提供 key，这是每个 selectItem 的唯一标识；select 头部每个子项默认是 selectItem 的 value，如果 selectItem 没有设置 value，默认是第一个选项\" title=\"注意事项\" mdxType=\"Alert\" />\n    <h4 {...{\n      \"id\": \"状态\"\n    }}>{`状态`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ad-select>\n  <ad-select-item key=\"{{0}}\" options=\"{{options1}}\" defaultValue=\"{{0}}\" />\n  <ad-select-item\n    key=\"{{1}}\"\n    options=\"{{options1}}\"\n    defaultValue=\"{{1}}\"\n    disabled\n  />\n</ad-select>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"slot\"\n    }}>{`Slot`}</h2>\n\n    <Table columnsResizable dataSource={slots} columns={[{\n      dataIndex: 'name',\n      title: 'name'\n    }, {\n      dataIndex: 'desc',\n      title: '描述'\n    }]} mdxType=\"Table\" />\n    {/* ## Events\n     export const events = [\n      {\n        name: 'onOpen',\n        desc: 'selectItem 展开时触发',\n        value: '-',\n      },\n      {\n        name: 'onClose',\n        desc: 'selectItem 隐藏时触发',\n        value: '-',\n      },\n     ]\n     <Table\n      columnsResizable\n      dataSource={events}\n      columns={[\n        {\n          dataIndex: 'name',\n          title: 'name',\n        },\n        {\n          dataIndex: 'desc',\n          title: '描述',\n        },\n        {\n          dataIndex: 'value',\n          title: '返回值',\n        },\n      ]}\n     /> */}\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}